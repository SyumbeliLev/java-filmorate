CREATE TABLE if not exists MPA
(
    MPA_ID INTEGER      NOT NULL AUTO_INCREMENT,
    NAME   VARCHAR(100) NOT NULL,
    CONSTRAINT IF NOT EXISTS MPA_PK PRIMARY KEY (MPA_ID)

);


CREATE TABLE if not exists GENRE
(
    GENRE_ID INTEGER      NOT NULL AUTO_INCREMENT,
    NAME     VARCHAR(100) NOT NULL,
    CONSTRAINT IF NOT EXISTS GENRE_PK PRIMARY KEY (GENRE_ID)
);


CREATE TABLE if not exists FILM
(
    FILM_ID      BIGINT       NOT NULL AUTO_INCREMENT,
    NAME         VARCHAR(255) NOT NULL,
    DESCRIPTION  VARCHAR(255),
    DURATION     INTEGER,
    RATE         INTEGER,
    RELEASE_DATE TIMESTAMP,
    MPA_ID       INTEGER,
    CONSTRAINT IF NOT EXISTS FILM_PK PRIMARY KEY (FILM_ID)

);
CREATE TABLE if not exists FILM_GENRE
(
    FILM_ID  BIGINT NOT NULL,
    GENRE_ID INTEGER

);

CREATE TABLE if not exists USER
(
    USER_ID  BIGINT       NOT NULL AUTO_INCREMENT,
    NAME     VARCHAR(100) NOT NULL,
    LOGIN    VARCHAR(100) NOT NULL,
    BIRTHDAY TIMESTAMP,
    EMAIL    VARCHAR(100) NOT NULL,
    CONSTRAINT IF NOT EXISTS USER_PK PRIMARY KEY (USER_ID)
);

CREATE TABLE if not exists FILM_LIKE
(
    FILM_ID BIGINT NOT NULL,
    USER_ID BIGINT
);

CREATE TABLE if not exists USER_FRIENDS
(
    USER_ID   BIGINT NOT NULL,
    FRIEND_ID BIGINT,
    STATUS    BOOLEAN
);



ALTER TABLE FILM
    ADD CONSTRAINT if not exists FILM_MPA_ID_FK FOREIGN KEY (MPA_ID) REFERENCES MPA (MPA_ID);


ALTER TABLE FILM_LIKE
    ADD CONSTRAINT if not exists FILM_LIKE_FK FOREIGN KEY (FILM_ID) REFERENCES FILM (FILM_ID);

ALTER TABLE FILM_LIKE
    ADD CONSTRAINT if not exists FILM_LIKE_USER_FK FOREIGN KEY (USER_ID) REFERENCES USER (USER_ID);

ALTER TABLE FILM_GENRE
    ADD CONSTRAINT if not exists FILM_GENRE_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES FILM (FILM_ID);

ALTER TABLE FILM_GENRE
    ADD CONSTRAINT if not exists FILM_GENRE_GENRE_FK FOREIGN KEY (GENRE_ID) REFERENCES GENRE (GENRE_ID);

ALTER TABLE USER_FRIENDS
    ADD CONSTRAINT if not exists USER_USER_ID_FK FOREIGN KEY (USER_ID) REFERENCES USER (USER_ID);

ALTER TABLE USER_FRIENDS
    ADD CONSTRAINT if not exists USER_FRIENDS_ID_FK FOREIGN KEY (FRIEND_ID) REFERENCES USER (USER_ID);


